#ifndef __CIRCULAR_BUFFER_H__
#define __CIRCULAR_BUFFER_H__

typedef struct Node
{
    void *data;
    struct Node *next;
    struct Node *previous;
}node_t;

typedef int (*action_func_ptr)(void *node, void *additional);
typedef int (*match_func_ptr)(void *node, void *additional);

/**********************************************************************/
/*
/*
/*
/**********************************************************************/
node_t *DLLCreateNode(node_t *previous, node_t *next, const void *data);

/**********************************************************************/
/*
/*
/* Complexity O(n)
/**********************************************************************/
void DLLDestroy(node_t *node);

/**********************************************************************/
/*
/*
/* 
/**********************************************************************/
void DLLRemove(node_t *node);

/**********************************************************************/
/*
/*
/*
/**********************************************************************/
void DLLRemoveAfter(node_t *previous_node);

/**********************************************************************/
/*
/*
/*
/**********************************************************************/
void DLLInsert(node_t *new_node, node_t *previous_node);

/**********************************************************************/
/*
/*
/*
/**********************************************************************/
void DLLInsertAfter(node_t *new_node, node_t *previous_node);

/**********************************************************************/
/*
/*
/* Complexity O(n)
/**********************************************************************/
size_t DLLSize(const node_t *head);

#endif
